      
      
      
      
      
      // Linq feature makes it easy to check for invalid characters
      // Any applies the test inside to each element of the source
      // so testList.Any(checkItem.Op) returns true if checkItem.Op is true
      // for any element in testList!
      // to get control chars, I use a pre-built string
      if ((CTRL_CHARS + " !\"#$%&'()*+,-/:;<=>?@[\\]^`{|}~").Any(DefName.Contains)) {
        // bad
        return 13;
      }

      to print text:
      use graphics.DrawString

      to get height/width of text:
     //set property window split location based on longest word
      Size szText = TextRenderer.MeasureText(" Use Res Names ", new Font("MS Sans Serif", 8));
      PropSplitLoc = szText.Width;
      PropRowHeight = szText.Height + 2;
