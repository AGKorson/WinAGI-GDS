      
      
      ***check WORDS.TOK opening function; it is missing a check to make sure the file exists,
      and creates a zero length file during the load attempt. ; if one doesn't
      the user should be told that, and (if in game) given option to create a new one; 
      
      
      // Linq feature makes it easy to check for invalid characters
      // Any applies the test inside to each element of the source
      // so testList.Any(checkItem.Op) returns true if checkItem.Op is true
      // for any element in testList!
      // to get control chars, I use a pre-built string
      if ((CTRL_CHARS + " !\"#$%&'()*+,-/:;<=>?@[\\]^`{|}~").Any(DefName.Contains)) {
        // bad
        return 13;
      }

      to print text:
      use graphics.DrawString

      to get height/width of text:
     //set property window split location based on longest word
      Size szText = TextRenderer.MeasureText(" Use Res Names ", new Font("MS Sans Serif", 8));
      PropSplitLoc = szText.Width;
      PropRowHeight = szText.Height + 2;

      changing to game object NOT being static; - need to re-check almost everything; specifically
       - reserved defines; most are static, and in the Compiler class; game-specific ones need to be  re-coded



!!! use a linked list for managing the MRU files; much easier than what I'm doing now; when adding new item to
the list, first check if it already exists; if it does, delete it, otherwise, delete last item on list, then
add new item to the top of the list - voila!

!!! now that I know how to convert text from raw byte code to codepage 437 (see decode logic), I think I can 
use that strategy to replace the ExtChar custom functions I wrote! should be easy to create a function
wrapper around that text - now I wonder if there's a similar conversion available in VB... the API functions
(MultiByteToWideChar and WideCharToMultiByte) might work, but I haven't been able to figure them out yet


Resource Error Levels:
0 = NO ERRORS or WARNINGS
-1 = (606) resource file missing (typically ingame, invalid VOL file given)
-2 = (700) resource file is readonly
-3 = (502) file access error
-4 = (505) invalid locator index
-5 = (506) invalid resource header
-6 = (704) logic sourcefile missing
-7 = (700) logic sourcefile is readonly
-8 = (502) logic sourcfile access error
-9 = (688) error in decompile: messages
-10 = (688) error in decompile: labels
-11 = (688) error in decompile: if-block
-12 = (688) error in decompile: invalid message value
-13 = (598) sound invalid data

ERROR HANDLER info:
resource base errors:
626: no resfile (outgame only)

606: resfile (volfile for ingame) missing
    Data["missingfile"] = string filename

502: file access error
    Data["exception"] = exception
    Data["badfile"] = string vol/resfile
    Data["ID"] = mResID

505: invalid mLoc (exceeds size of vol file)
    Data["loc"] = mLoc
    Data["vol"] = mVol
    Data["volname"] = Path.GetFileName(fsVOL.Name);
    Data["ID"] = mResID

506: invalid resource header (not 0x12 0x34)
    Data["loc"] = mLoc
    Data["vol"] = mVol
    Data["volname"] = Path.GetFileName(fsVOL.Name);
    Data["ID"] = mResID

Logic Load:
    none

Logic LoadSource:
704: missing source file
    Data["missingfile"] = string LoadFile

502: file access error
    Data["exception"] = exception
    Data["badfile"] = string vol/resfile
    Data["ID"] = mResID

Picture Load:
    none

Sound Load:
598: invalid sound data
    Data["ID"] = mResID

    LoadTracks:
    598: invalid sound data
        Data["ID"] = mResID

    565: load track error
        Data["exception"] = exception
        Data["ID"] = mResID



View Load: (LoadLoops):
595: invalid data
    Data["ID"] = mResID

548: invalid loop pointer
    Data["ID"] = mResID
    Data["loop"] = bytLoop
    
    SetMirror:
    563: not loaded (n/a during gameload)
    
    539: source>max (n/a during gameload)

    539: invalid loop(>8)
        Data["ID"] = mResID
        Data["srcloop"] = srcloop
        Data["tgtloop"] = tgtloop

    550: tgt already mirrored (n/a during gameload)
        Data["ID"] = mResID
        Data["tgtloop"] = tgtloop

    551: src already mirrored
        Data["ID"] = mResID
        Data["srcloop"] = srcloop


553: invalid cel pointer
    Data["ID"] = mResID
    Data["loop"] = bytLoop
    Data["cel"] = bytCel


other resource errors:
CompileSound:
566: compile sound error
    Data["exception"] = exception
    Data["ID"] = mResID

BuildSoundOutput:
596: build sound error
    Data["exception"] = exception
    Data["ID"] = mResID


CompileResCol:
638: file access error
    Data["exception"] = exception
    Data["ID"] = mResID

    
AddtoVol:
638: file access error
    Data["exception"] = exception
    Data["ID"] = mResID

ValidateVolAndLoc:
640: file access error
    Data["exception"] = exception
    Data["ID"] = mResID

ValidateVolAndLoc:
640: file access error
    Data["exception"] = exception
    Data["ID"] = mResID

Word.tok Compile:
672: file access error
    Data["exception"] = exception
    Data["ID"] = mResID

=========================================================================
LoadGame Errors:
    Import:
        501: game already loaded
        541: Not a valid AGI directory
            ["baddir"] = string gamedir
        699: Unable to backup existing wag file
            ["exception"] = Exception ex
        543: invalid interpreter version
         
    Open:
        501: game already loaded
        655: missing WAG file
            ["badwag"] = string wagfilename
        541: Not a valid AGI directory
            ["baddir"] = string gamedir
        700: file (WAG) is readonly
            ["badfile"] =string filename
        701: file error accessing WAG
            ["exception"] = Exception ex
        665: unsupported WinAGI version
            ["badversion"] = string version
        691: invalid interpreter version
            ["badversion"] = string version
        690: missing GameID in WAG

    FinishGameLoad:
    none- passes errors from ExtractResources

    ExtractResources:
        524: missing v3 DIR file
            ["missingfile"] = string dirfile
        502: v3 DIR file access error
            ["exception"] Exception = ex
            ["badfile"] = string dirfile
        542: invalid v3 DIR file
            ["baddir"] = string gamedir
        524: missing v2 DIR file
            ["missingfile"] = string dirfile
        502: v2 DIR file access error
            ["exception"] Exception = ex
            ["badfile"] = string dirfile
        542: invalid v2 DIR file
            ["baddir"] = string gamedir
        542: invalid DIR file (v3 offset invalid)
            ["baddir"] = string gamedir
        703: file access error v2 DIR
            ["exception"] Exception = ex
            ["dirfile"] = string dirfile
        703: file access error v3 DIR
            ["exception"] Exception = ex
            ["dirfile"] = string dirfile
